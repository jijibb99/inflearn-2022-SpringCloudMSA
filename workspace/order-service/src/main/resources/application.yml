spring:
  profiles:
    group:
      "docker": "docker_profile, default_profile"
      "local": "local_profile, default_profile"
---
# 공통 적용 대상
spring.config.activate.on-profile: default_profile

server:
  port: 0

spring:
  application:
    name: order-service
  sleuth:
    sampler:
      probability: 1.0
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: update

logging:
  level:
    com.example.orderservice: DEBUG

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus

---
#Local Exec
spring.config.activate.on-profile: local_profile

spring:
  zipkin:
    base-url: http://inno3t2:4126
    enabled: true
  datasource:
    #    driver-class-name: org.h2.Driver
    #    url: jdbc:h2:mem:testdb
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://inno3t2:4121/my_db
    #    driver-class-name: com.mysql.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/order?useUnicode=true&serverTimezone=Asia/Seoul
    username: user
    password: pwd

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://inno3t2:4116/eureka

#kafka 서버 정보
user:
  KafkaProducerConfig:
    BOOTSTRAP_SERVERS_CONFIG: inno3t2:4192

---
#Docker
spring.config.activate.on-profile: docker_profile

spring:
  zipkin:
    base-url: http://zipkin:9411
    enabled: true
  datasource:
    #    driver-class-name: org.h2.Driver
    #    url: jdbc:h2:mem:testdb
    driver-class-name: org.mariadb.jdbc.Driver
    url: jdbc:mariadb://mariadb:3306/my_db
    #    driver-class-name: com.mysql.jdbc.Driver
    #    url: jdbc:mysql://localhost:3306/order?useUnicode=true&serverTimezone=Asia/Seoul
    username: user
    password: pwd

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://discovery-service:8761/eureka/

#kafka 서버 정보
user:
  KafkaProducerConfig:
    BOOTSTRAP_SERVERS_CONFIG: 172.19.0.101:9092


logging:
  file: /api-logs/orders-ws.log